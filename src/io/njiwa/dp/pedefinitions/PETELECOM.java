/*
 * Njiwa Open Source Embedded M2M UICC Remote Subscription Manager
 * 
 * 
 * Copyright (C) 2019 - , Digital Solutions Ltd. - http://www.dsmagic.com
 *
 * Njiwa Dev <dev@njiwa.io>
 * 
 * This program is free software, distributed under the terms of
 * the GNU General Public License.
 */ 

/**
 * This class file was automatically generated by jASN1 v1.6.0 (http://www.openmuc.org)
 */

package io.njiwa.dp.pedefinitions;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jasn1.ber.BerIdentifier;
import org.openmuc.jasn1.ber.BerLength;
import org.openmuc.jasn1.ber.types.BerObjectIdentifier;

import java.io.IOException;
import java.io.InputStream;


public class PETELECOM {

	public static final BerIdentifier identifier = new BerIdentifier(BerIdentifier.UNIVERSAL_CLASS, BerIdentifier.CONSTRUCTED, 16);
	protected BerIdentifier id;

	public byte[] code = null;
	private PEHeader telecomHeader = null;

	private BerObjectIdentifier templateID = null;

	private File dfTelecom = null;

	private File efArr = null;

	private File efRma = null;

	private File efSume = null;

	private File efIceDn = null;

	private File efIceFf = null;

	private File efPsismsc = null;

	private File dfGraphics = null;

	private File efImg = null;

	private File efIidf = null;

	private File efIceGraphics = null;

	private File efLaunchScws = null;

	private File efIcon = null;

	private File dfPhonebook = null;

	private File efPbr = null;

	private File efExt1 = null;

	private File efAas = null;

	private File efGas = null;

	private File efPsc = null;

	private File efCc = null;

	private File efPuid = null;

	private File efIap = null;

	private File efAdn = null;

	private File efPbc = null;

	private File efAnr = null;

	private File efPuri = null;

	private File efEmail = null;

	private File efSne = null;

	private File efUid = null;

	private File efGrp = null;

	private File efCcp1 = null;

	private File dfMultimedia = null;

	private File efMml = null;

	private File efMmdf = null;

	private File dfMmss = null;

	private File efMlpl = null;

	private File efMspl = null;

	private File efMmssmode = null;

	public PETELECOM() {
		id = identifier;
	}

	public PETELECOM(byte[] code) {
		id = identifier;
		this.code = code;
	}

	public void setTelecomHeader(PEHeader telecomHeader) {
		this.telecomHeader = telecomHeader;
	}

	public PEHeader getTelecomHeader() {
		return telecomHeader;
	}

	public void setTemplateID(BerObjectIdentifier templateID) {
		this.templateID = templateID;
	}

	public BerObjectIdentifier getTemplateID() {
		return templateID;
	}

	public void setDfTelecom(File dfTelecom) {
		this.dfTelecom = dfTelecom;
	}

	public File getDfTelecom() {
		return dfTelecom;
	}

	public void setEfArr(File efArr) {
		this.efArr = efArr;
	}

	public File getEfArr() {
		return efArr;
	}

	public void setEfRma(File efRma) {
		this.efRma = efRma;
	}

	public File getEfRma() {
		return efRma;
	}

	public void setEfSume(File efSume) {
		this.efSume = efSume;
	}

	public File getEfSume() {
		return efSume;
	}

	public void setEfIceDn(File efIceDn) {
		this.efIceDn = efIceDn;
	}

	public File getEfIceDn() {
		return efIceDn;
	}

	public void setEfIceFf(File efIceFf) {
		this.efIceFf = efIceFf;
	}

	public File getEfIceFf() {
		return efIceFf;
	}

	public void setEfPsismsc(File efPsismsc) {
		this.efPsismsc = efPsismsc;
	}

	public File getEfPsismsc() {
		return efPsismsc;
	}

	public void setDfGraphics(File dfGraphics) {
		this.dfGraphics = dfGraphics;
	}

	public File getDfGraphics() {
		return dfGraphics;
	}

	public void setEfImg(File efImg) {
		this.efImg = efImg;
	}

	public File getEfImg() {
		return efImg;
	}

	public void setEfIidf(File efIidf) {
		this.efIidf = efIidf;
	}

	public File getEfIidf() {
		return efIidf;
	}

	public void setEfIceGraphics(File efIceGraphics) {
		this.efIceGraphics = efIceGraphics;
	}

	public File getEfIceGraphics() {
		return efIceGraphics;
	}

	public void setEfLaunchScws(File efLaunchScws) {
		this.efLaunchScws = efLaunchScws;
	}

	public File getEfLaunchScws() {
		return efLaunchScws;
	}

	public void setEfIcon(File efIcon) {
		this.efIcon = efIcon;
	}

	public File getEfIcon() {
		return efIcon;
	}

	public void setDfPhonebook(File dfPhonebook) {
		this.dfPhonebook = dfPhonebook;
	}

	public File getDfPhonebook() {
		return dfPhonebook;
	}

	public void setEfPbr(File efPbr) {
		this.efPbr = efPbr;
	}

	public File getEfPbr() {
		return efPbr;
	}

	public void setEfExt1(File efExt1) {
		this.efExt1 = efExt1;
	}

	public File getEfExt1() {
		return efExt1;
	}

	public void setEfAas(File efAas) {
		this.efAas = efAas;
	}

	public File getEfAas() {
		return efAas;
	}

	public void setEfGas(File efGas) {
		this.efGas = efGas;
	}

	public File getEfGas() {
		return efGas;
	}

	public void setEfPsc(File efPsc) {
		this.efPsc = efPsc;
	}

	public File getEfPsc() {
		return efPsc;
	}

	public void setEfCc(File efCc) {
		this.efCc = efCc;
	}

	public File getEfCc() {
		return efCc;
	}

	public void setEfPuid(File efPuid) {
		this.efPuid = efPuid;
	}

	public File getEfPuid() {
		return efPuid;
	}

	public void setEfIap(File efIap) {
		this.efIap = efIap;
	}

	public File getEfIap() {
		return efIap;
	}

	public void setEfAdn(File efAdn) {
		this.efAdn = efAdn;
	}

	public File getEfAdn() {
		return efAdn;
	}

	public void setEfPbc(File efPbc) {
		this.efPbc = efPbc;
	}

	public File getEfPbc() {
		return efPbc;
	}

	public void setEfAnr(File efAnr) {
		this.efAnr = efAnr;
	}

	public File getEfAnr() {
		return efAnr;
	}

	public void setEfPuri(File efPuri) {
		this.efPuri = efPuri;
	}

	public File getEfPuri() {
		return efPuri;
	}

	public void setEfEmail(File efEmail) {
		this.efEmail = efEmail;
	}

	public File getEfEmail() {
		return efEmail;
	}

	public void setEfSne(File efSne) {
		this.efSne = efSne;
	}

	public File getEfSne() {
		return efSne;
	}

	public void setEfUid(File efUid) {
		this.efUid = efUid;
	}

	public File getEfUid() {
		return efUid;
	}

	public void setEfGrp(File efGrp) {
		this.efGrp = efGrp;
	}

	public File getEfGrp() {
		return efGrp;
	}

	public void setEfCcp1(File efCcp1) {
		this.efCcp1 = efCcp1;
	}

	public File getEfCcp1() {
		return efCcp1;
	}

	public void setDfMultimedia(File dfMultimedia) {
		this.dfMultimedia = dfMultimedia;
	}

	public File getDfMultimedia() {
		return dfMultimedia;
	}

	public void setEfMml(File efMml) {
		this.efMml = efMml;
	}

	public File getEfMml() {
		return efMml;
	}

	public void setEfMmdf(File efMmdf) {
		this.efMmdf = efMmdf;
	}

	public File getEfMmdf() {
		return efMmdf;
	}

	public void setDfMmss(File dfMmss) {
		this.dfMmss = dfMmss;
	}

	public File getDfMmss() {
		return dfMmss;
	}

	public void setEfMlpl(File efMlpl) {
		this.efMlpl = efMlpl;
	}

	public File getEfMlpl() {
		return efMlpl;
	}

	public void setEfMspl(File efMspl) {
		this.efMspl = efMspl;
	}

	public File getEfMspl() {
		return efMspl;
	}

	public void setEfMmssmode(File efMmssmode) {
		this.efMmssmode = efMmssmode;
	}

	public File getEfMmssmode() {
		return efMmssmode;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			if (efMmssmode != null) {
				codeLength += efMmssmode.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 39
				os.write(0x27);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMspl != null) {
				codeLength += efMspl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 38
				os.write(0x26);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMlpl != null) {
				codeLength += efMlpl.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 37
				os.write(0x25);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (dfMmss != null) {
				codeLength += dfMmss.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 36
				os.write(0x24);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMmdf != null) {
				codeLength += efMmdf.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 35
				os.write(0x23);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efMml != null) {
				codeLength += efMml.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 34
				os.write(0x22);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (dfMultimedia != null) {
				codeLength += dfMultimedia.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 33
				os.write(0x21);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efCcp1 != null) {
				codeLength += efCcp1.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 32
				os.write(0x20);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efGrp != null) {
				codeLength += efGrp.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 31
				os.write(0x1f);
				os.write(0xbf);
				codeLength += 2;
			}
			
			if (efUid != null) {
				codeLength += efUid.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 30
				os.write(0xbe);
				codeLength += 1;
			}
			
			if (efSne != null) {
				codeLength += efSne.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 29
				os.write(0xbd);
				codeLength += 1;
			}
			
			if (efEmail != null) {
				codeLength += efEmail.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 28
				os.write(0xbc);
				codeLength += 1;
			}
			
			if (efPuri != null) {
				codeLength += efPuri.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 27
				os.write(0xbb);
				codeLength += 1;
			}
			
			if (efAnr != null) {
				codeLength += efAnr.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 26
				os.write(0xba);
				codeLength += 1;
			}
			
			if (efPbc != null) {
				codeLength += efPbc.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 25
				os.write(0xb9);
				codeLength += 1;
			}
			
			if (efAdn != null) {
				codeLength += efAdn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 24
				os.write(0xb8);
				codeLength += 1;
			}
			
			if (efIap != null) {
				codeLength += efIap.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 23
				os.write(0xb7);
				codeLength += 1;
			}
			
			if (efPuid != null) {
				codeLength += efPuid.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 22
				os.write(0xb6);
				codeLength += 1;
			}
			
			if (efCc != null) {
				codeLength += efCc.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 21
				os.write(0xb5);
				codeLength += 1;
			}
			
			if (efPsc != null) {
				codeLength += efPsc.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 20
				os.write(0xb4);
				codeLength += 1;
			}
			
			if (efGas != null) {
				codeLength += efGas.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 19
				os.write(0xb3);
				codeLength += 1;
			}
			
			if (efAas != null) {
				codeLength += efAas.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 18
				os.write(0xb2);
				codeLength += 1;
			}
			
			if (efExt1 != null) {
				codeLength += efExt1.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 17
				os.write(0xb1);
				codeLength += 1;
			}
			
			if (efPbr != null) {
				codeLength += efPbr.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 16
				os.write(0xb0);
				codeLength += 1;
			}
			
			if (dfPhonebook != null) {
				codeLength += dfPhonebook.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 15
				os.write(0xaf);
				codeLength += 1;
			}
			
			if (efIcon != null) {
				codeLength += efIcon.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 14
				os.write(0xae);
				codeLength += 1;
			}
			
			if (efLaunchScws != null) {
				codeLength += efLaunchScws.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 13
				os.write(0xad);
				codeLength += 1;
			}
			
			if (efIceGraphics != null) {
				codeLength += efIceGraphics.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 12
				os.write(0xac);
				codeLength += 1;
			}
			
			if (efIidf != null) {
				codeLength += efIidf.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 11
				os.write(0xab);
				codeLength += 1;
			}
			
			if (efImg != null) {
				codeLength += efImg.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 10
				os.write(0xaa);
				codeLength += 1;
			}
			
			if (dfGraphics != null) {
				codeLength += dfGraphics.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 9
				os.write(0xa9);
				codeLength += 1;
			}
			
			if (efPsismsc != null) {
				codeLength += efPsismsc.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 8
				os.write(0xa8);
				codeLength += 1;
			}
			
			if (efIceFf != null) {
				codeLength += efIceFf.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 7
				os.write(0xa7);
				codeLength += 1;
			}
			
			if (efIceDn != null) {
				codeLength += efIceDn.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 6
				os.write(0xa6);
				codeLength += 1;
			}
			
			if (efSume != null) {
				codeLength += efSume.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 5
				os.write(0xa5);
				codeLength += 1;
			}
			
			if (efRma != null) {
				codeLength += efRma.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 4
				os.write(0xa4);
				codeLength += 1;
			}
			
			if (efArr != null) {
				codeLength += efArr.encode(os, false);
				// write tag: CONTEXT_CLASS, CONSTRUCTED, 3
				os.write(0xa3);
				codeLength += 1;
			}
			
			codeLength += dfTelecom.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 2
			os.write(0xa2);
			codeLength += 1;
			
			codeLength += templateID.encode(os, false);
			// write tag: CONTEXT_CLASS, PRIMITIVE, 1
			os.write(0x81);
			codeLength += 1;
			
			codeLength += telecomHeader.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 0
			os.write(0xa0);
			codeLength += 1;
			
			codeLength += BerLength.encodeLength(os, codeLength);
		}

		if (explicit) {
			codeLength += id.encode(os);
		}

		return codeLength;

	}

	public int decode(InputStream is, boolean explicit) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerIdentifier berIdentifier = new BerIdentifier();

		if (explicit) {
			codeLength += id.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		int totalLength = length.val;
		codeLength += totalLength;

		subCodeLength += berIdentifier.decode(is);
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
			telecomHeader = new PEHeader();
			subCodeLength += telecomHeader.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 1)) {
			templateID = new BerObjectIdentifier();
			subCodeLength += templateID.decode(is, false);
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
			dfTelecom = new File();
			subCodeLength += dfTelecom.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		else {
			throw new IOException("Identifier does not match the mandatory sequence element identifer.");
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
			efArr = new File();
			subCodeLength += efArr.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
			efRma = new File();
			subCodeLength += efRma.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
			efSume = new File();
			subCodeLength += efSume.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
			efIceDn = new File();
			subCodeLength += efIceDn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
			efIceFf = new File();
			subCodeLength += efIceFf.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
			efPsismsc = new File();
			subCodeLength += efPsismsc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
			dfGraphics = new File();
			subCodeLength += dfGraphics.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
			efImg = new File();
			subCodeLength += efImg.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
			efIidf = new File();
			subCodeLength += efIidf.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
			efIceGraphics = new File();
			subCodeLength += efIceGraphics.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
			efLaunchScws = new File();
			subCodeLength += efLaunchScws.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
			efIcon = new File();
			subCodeLength += efIcon.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
			dfPhonebook = new File();
			subCodeLength += dfPhonebook.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
			efPbr = new File();
			subCodeLength += efPbr.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
			efExt1 = new File();
			subCodeLength += efExt1.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
			efAas = new File();
			subCodeLength += efAas.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
			efGas = new File();
			subCodeLength += efGas.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 20)) {
			efPsc = new File();
			subCodeLength += efPsc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 21)) {
			efCc = new File();
			subCodeLength += efCc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 22)) {
			efPuid = new File();
			subCodeLength += efPuid.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 23)) {
			efIap = new File();
			subCodeLength += efIap.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 24)) {
			efAdn = new File();
			subCodeLength += efAdn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 25)) {
			efPbc = new File();
			subCodeLength += efPbc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 26)) {
			efAnr = new File();
			subCodeLength += efAnr.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 27)) {
			efPuri = new File();
			subCodeLength += efPuri.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 28)) {
			efEmail = new File();
			subCodeLength += efEmail.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 29)) {
			efSne = new File();
			subCodeLength += efSne.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)) {
			efUid = new File();
			subCodeLength += efUid.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 31)) {
			efGrp = new File();
			subCodeLength += efGrp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 32)) {
			efCcp1 = new File();
			subCodeLength += efCcp1.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 33)) {
			dfMultimedia = new File();
			subCodeLength += dfMultimedia.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 34)) {
			efMml = new File();
			subCodeLength += efMml.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 35)) {
			efMmdf = new File();
			subCodeLength += efMmdf.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 36)) {
			dfMmss = new File();
			subCodeLength += dfMmss.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 37)) {
			efMlpl = new File();
			subCodeLength += efMlpl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 38)) {
			efMspl = new File();
			subCodeLength += efMspl.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berIdentifier.decode(is);
		}
		
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 39)) {
			efMmssmode = new File();
			subCodeLength += efMmssmode.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
		}
		throw new IOException("Unexpected end of sequence, length tag: " + totalLength + ", actual sequence length: " + subCodeLength);

		
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		StringBuilder sb = new StringBuilder("SEQUENCE{");
		sb.append("telecomHeader: ").append(telecomHeader);
		
		sb.append(", ");
		sb.append("templateID: ").append(templateID);
		
		sb.append(", ");
		sb.append("dfTelecom: ").append(dfTelecom);
		
		if (efArr != null) {
			sb.append(", ");
			sb.append("efArr: ").append(efArr);
		}
		
		if (efRma != null) {
			sb.append(", ");
			sb.append("efRma: ").append(efRma);
		}
		
		if (efSume != null) {
			sb.append(", ");
			sb.append("efSume: ").append(efSume);
		}
		
		if (efIceDn != null) {
			sb.append(", ");
			sb.append("efIceDn: ").append(efIceDn);
		}
		
		if (efIceFf != null) {
			sb.append(", ");
			sb.append("efIceFf: ").append(efIceFf);
		}
		
		if (efPsismsc != null) {
			sb.append(", ");
			sb.append("efPsismsc: ").append(efPsismsc);
		}
		
		if (dfGraphics != null) {
			sb.append(", ");
			sb.append("dfGraphics: ").append(dfGraphics);
		}
		
		if (efImg != null) {
			sb.append(", ");
			sb.append("efImg: ").append(efImg);
		}
		
		if (efIidf != null) {
			sb.append(", ");
			sb.append("efIidf: ").append(efIidf);
		}
		
		if (efIceGraphics != null) {
			sb.append(", ");
			sb.append("efIceGraphics: ").append(efIceGraphics);
		}
		
		if (efLaunchScws != null) {
			sb.append(", ");
			sb.append("efLaunchScws: ").append(efLaunchScws);
		}
		
		if (efIcon != null) {
			sb.append(", ");
			sb.append("efIcon: ").append(efIcon);
		}
		
		if (dfPhonebook != null) {
			sb.append(", ");
			sb.append("dfPhonebook: ").append(dfPhonebook);
		}
		
		if (efPbr != null) {
			sb.append(", ");
			sb.append("efPbr: ").append(efPbr);
		}
		
		if (efExt1 != null) {
			sb.append(", ");
			sb.append("efExt1: ").append(efExt1);
		}
		
		if (efAas != null) {
			sb.append(", ");
			sb.append("efAas: ").append(efAas);
		}
		
		if (efGas != null) {
			sb.append(", ");
			sb.append("efGas: ").append(efGas);
		}
		
		if (efPsc != null) {
			sb.append(", ");
			sb.append("efPsc: ").append(efPsc);
		}
		
		if (efCc != null) {
			sb.append(", ");
			sb.append("efCc: ").append(efCc);
		}
		
		if (efPuid != null) {
			sb.append(", ");
			sb.append("efPuid: ").append(efPuid);
		}
		
		if (efIap != null) {
			sb.append(", ");
			sb.append("efIap: ").append(efIap);
		}
		
		if (efAdn != null) {
			sb.append(", ");
			sb.append("efAdn: ").append(efAdn);
		}
		
		if (efPbc != null) {
			sb.append(", ");
			sb.append("efPbc: ").append(efPbc);
		}
		
		if (efAnr != null) {
			sb.append(", ");
			sb.append("efAnr: ").append(efAnr);
		}
		
		if (efPuri != null) {
			sb.append(", ");
			sb.append("efPuri: ").append(efPuri);
		}
		
		if (efEmail != null) {
			sb.append(", ");
			sb.append("efEmail: ").append(efEmail);
		}
		
		if (efSne != null) {
			sb.append(", ");
			sb.append("efSne: ").append(efSne);
		}
		
		if (efUid != null) {
			sb.append(", ");
			sb.append("efUid: ").append(efUid);
		}
		
		if (efGrp != null) {
			sb.append(", ");
			sb.append("efGrp: ").append(efGrp);
		}
		
		if (efCcp1 != null) {
			sb.append(", ");
			sb.append("efCcp1: ").append(efCcp1);
		}
		
		if (dfMultimedia != null) {
			sb.append(", ");
			sb.append("dfMultimedia: ").append(dfMultimedia);
		}
		
		if (efMml != null) {
			sb.append(", ");
			sb.append("efMml: ").append(efMml);
		}
		
		if (efMmdf != null) {
			sb.append(", ");
			sb.append("efMmdf: ").append(efMmdf);
		}
		
		if (dfMmss != null) {
			sb.append(", ");
			sb.append("dfMmss: ").append(dfMmss);
		}
		
		if (efMlpl != null) {
			sb.append(", ");
			sb.append("efMlpl: ").append(efMlpl);
		}
		
		if (efMspl != null) {
			sb.append(", ");
			sb.append("efMspl: ").append(efMspl);
		}
		
		if (efMmssmode != null) {
			sb.append(", ");
			sb.append("efMmssmode: ").append(efMmssmode);
		}
		
		sb.append("}");
		return sb.toString();
	}

}

