/*
 * Njiwa Open Source Embedded M2M UICC Remote Subscription Manager
 * 
 * 
 * Copyright (C) 2019 - , Digital Solutions Ltd. - http://www.dsmagic.com
 *
 * Njiwa Dev <dev@njiwa.io>
 * 
 * This program is free software, distributed under the terms of
 * the GNU General Public License.
 */ 

/**
 * This class file was automatically generated by jASN1 v1.6.0 (http://www.openmuc.org)
 */

package io.njiwa.dp.pedefinitions;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jasn1.ber.BerIdentifier;
import org.openmuc.jasn1.ber.BerLength;

import java.io.IOException;
import java.io.InputStream;


public class ProfileElement {

	public byte[] code = null;
	private ProfileHeader header = null;

	private PEGenericFileManagement genericFileManagement = null;

	private PEPINCodes pinCodes = null;

	private PEPUKCodes pukCodes = null;

	private PEAKAParameter akaParameter = null;

	private PECDMAParameter cdmaParameter = null;

	private PESecurityDomain securityDomain = null;

	private PERFM rfm = null;

	private PEApplication application = null;

	private PENonStandard nonStandard = null;

	private PEEnd end = null;

	private PEDummy rfu1 = null;

	private PEDummy rfu2 = null;

	private PEDummy rfu3 = null;

	private PEDummy rfu4 = null;

	private PEDummy rfu5 = null;

	private PEMF mf = null;

	private PECD cd = null;

	private PETELECOM telecom = null;

	private PEUSIM usim = null;

	private PEOPTUSIM optUsim = null;

	private PEISIM isim = null;

	private PEOPTISIM optIsim = null;

	private PEPHONEBOOK phonebook = null;

	private PEGSMACCESS gsmAccess = null;

	private PECSIM csim = null;

	private PEOPTCSIM optCsim = null;

	public ProfileElement() {
	}

	public ProfileElement(byte[] code) {
		this.code = code;
	}

	public void setHeader(ProfileHeader header) {
		this.header = header;
	}

	public ProfileHeader getHeader() {
		return header;
	}

	public void setGenericFileManagement(PEGenericFileManagement genericFileManagement) {
		this.genericFileManagement = genericFileManagement;
	}

	public PEGenericFileManagement getGenericFileManagement() {
		return genericFileManagement;
	}

	public void setPinCodes(PEPINCodes pinCodes) {
		this.pinCodes = pinCodes;
	}

	public PEPINCodes getPinCodes() {
		return pinCodes;
	}

	public void setPukCodes(PEPUKCodes pukCodes) {
		this.pukCodes = pukCodes;
	}

	public PEPUKCodes getPukCodes() {
		return pukCodes;
	}

	public void setAkaParameter(PEAKAParameter akaParameter) {
		this.akaParameter = akaParameter;
	}

	public PEAKAParameter getAkaParameter() {
		return akaParameter;
	}

	public void setCdmaParameter(PECDMAParameter cdmaParameter) {
		this.cdmaParameter = cdmaParameter;
	}

	public PECDMAParameter getCdmaParameter() {
		return cdmaParameter;
	}

	public void setSecurityDomain(PESecurityDomain securityDomain) {
		this.securityDomain = securityDomain;
	}

	public PESecurityDomain getSecurityDomain() {
		return securityDomain;
	}

	public void setRfm(PERFM rfm) {
		this.rfm = rfm;
	}

	public PERFM getRfm() {
		return rfm;
	}

	public void setApplication(PEApplication application) {
		this.application = application;
	}

	public PEApplication getApplication() {
		return application;
	}

	public void setNonStandard(PENonStandard nonStandard) {
		this.nonStandard = nonStandard;
	}

	public PENonStandard getNonStandard() {
		return nonStandard;
	}

	public void setEnd(PEEnd end) {
		this.end = end;
	}

	public PEEnd getEnd() {
		return end;
	}

	public void setRfu1(PEDummy rfu1) {
		this.rfu1 = rfu1;
	}

	public PEDummy getRfu1() {
		return rfu1;
	}

	public void setRfu2(PEDummy rfu2) {
		this.rfu2 = rfu2;
	}

	public PEDummy getRfu2() {
		return rfu2;
	}

	public void setRfu3(PEDummy rfu3) {
		this.rfu3 = rfu3;
	}

	public PEDummy getRfu3() {
		return rfu3;
	}

	public void setRfu4(PEDummy rfu4) {
		this.rfu4 = rfu4;
	}

	public PEDummy getRfu4() {
		return rfu4;
	}

	public void setRfu5(PEDummy rfu5) {
		this.rfu5 = rfu5;
	}

	public PEDummy getRfu5() {
		return rfu5;
	}

	public void setMf(PEMF mf) {
		this.mf = mf;
	}

	public PEMF getMf() {
		return mf;
	}

	public void setCd(PECD cd) {
		this.cd = cd;
	}

	public PECD getCd() {
		return cd;
	}

	public void setTelecom(PETELECOM telecom) {
		this.telecom = telecom;
	}

	public PETELECOM getTelecom() {
		return telecom;
	}

	public void setUsim(PEUSIM usim) {
		this.usim = usim;
	}

	public PEUSIM getUsim() {
		return usim;
	}

	public void setOptUsim(PEOPTUSIM optUsim) {
		this.optUsim = optUsim;
	}

	public PEOPTUSIM getOptUsim() {
		return optUsim;
	}

	public void setIsim(PEISIM isim) {
		this.isim = isim;
	}

	public PEISIM getIsim() {
		return isim;
	}

	public void setOptIsim(PEOPTISIM optIsim) {
		this.optIsim = optIsim;
	}

	public PEOPTISIM getOptIsim() {
		return optIsim;
	}

	public void setPhonebook(PEPHONEBOOK phonebook) {
		this.phonebook = phonebook;
	}

	public PEPHONEBOOK getPhonebook() {
		return phonebook;
	}

	public void setGsmAccess(PEGSMACCESS gsmAccess) {
		this.gsmAccess = gsmAccess;
	}

	public PEGSMACCESS getGsmAccess() {
		return gsmAccess;
	}

	public void setCsim(PECSIM csim) {
		this.csim = csim;
	}

	public PECSIM getCsim() {
		return csim;
	}

	public void setOptCsim(PEOPTCSIM optCsim) {
		this.optCsim = optCsim;
	}

	public PEOPTCSIM getOptCsim() {
		return optCsim;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {
		if (code != null) {
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
			return code.length;

		}
		int codeLength = 0;
		if (optCsim != null) {
			codeLength += optCsim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 26
			os.write(0xba);
			codeLength += 1;
			return codeLength;

		}
		
		if (csim != null) {
			codeLength += csim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 25
			os.write(0xb9);
			codeLength += 1;
			return codeLength;

		}
		
		if (gsmAccess != null) {
			codeLength += gsmAccess.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 24
			os.write(0xb8);
			codeLength += 1;
			return codeLength;

		}
		
		if (phonebook != null) {
			codeLength += phonebook.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 23
			os.write(0xb7);
			codeLength += 1;
			return codeLength;

		}
		
		if (optIsim != null) {
			codeLength += optIsim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 22
			os.write(0xb6);
			codeLength += 1;
			return codeLength;

		}
		
		if (isim != null) {
			codeLength += isim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 21
			os.write(0xb5);
			codeLength += 1;
			return codeLength;

		}
		
		if (optUsim != null) {
			codeLength += optUsim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 20
			os.write(0xb4);
			codeLength += 1;
			return codeLength;

		}
		
		if (usim != null) {
			codeLength += usim.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 19
			os.write(0xb3);
			codeLength += 1;
			return codeLength;

		}
		
		if (telecom != null) {
			codeLength += telecom.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 18
			os.write(0xb2);
			codeLength += 1;
			return codeLength;

		}
		
		if (cd != null) {
			codeLength += cd.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 17
			os.write(0xb1);
			codeLength += 1;
			return codeLength;

		}
		
		if (mf != null) {
			codeLength += mf.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 16
			os.write(0xb0);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfu5 != null) {
			codeLength += rfu5.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 15
			os.write(0xaf);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfu4 != null) {
			codeLength += rfu4.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 14
			os.write(0xae);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfu3 != null) {
			codeLength += rfu3.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 13
			os.write(0xad);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfu2 != null) {
			codeLength += rfu2.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 12
			os.write(0xac);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfu1 != null) {
			codeLength += rfu1.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 11
			os.write(0xab);
			codeLength += 1;
			return codeLength;

		}
		
		if (end != null) {
			codeLength += end.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 10
			os.write(0xaa);
			codeLength += 1;
			return codeLength;

		}
		
		if (nonStandard != null) {
			codeLength += nonStandard.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 9
			os.write(0xa9);
			codeLength += 1;
			return codeLength;

		}
		
		if (application != null) {
			codeLength += application.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 8
			os.write(0xa8);
			codeLength += 1;
			return codeLength;

		}
		
		if (rfm != null) {
			codeLength += rfm.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 7
			os.write(0xa7);
			codeLength += 1;
			return codeLength;

		}
		
		if (securityDomain != null) {
			codeLength += securityDomain.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 6
			os.write(0xa6);
			codeLength += 1;
			return codeLength;

		}
		
		if (cdmaParameter != null) {
			codeLength += cdmaParameter.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 5
			os.write(0xa5);
			codeLength += 1;
			return codeLength;

		}
		
		if (akaParameter != null) {
			codeLength += akaParameter.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 4
			os.write(0xa4);
			codeLength += 1;
			return codeLength;

		}
		
		if (pukCodes != null) {
			codeLength += pukCodes.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 3
			os.write(0xa3);
			codeLength += 1;
			return codeLength;

		}
		
		if (pinCodes != null) {
			codeLength += pinCodes.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 2
			os.write(0xa2);
			codeLength += 1;
			return codeLength;

		}
		
		if (genericFileManagement != null) {
			codeLength += genericFileManagement.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 1
			os.write(0xa1);
			codeLength += 1;
			return codeLength;

		}
		
		if (header != null) {
			codeLength += header.encode(os, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 0
			os.write(0xa0);
			codeLength += 1;
			return codeLength;

		}
		
		throw new IOException("Error encoding BerChoice: No item in choice was selected.");
	}

	public int decode(InputStream is, BerIdentifier berIdentifier) throws IOException {
		int codeLength = 0;
		BerIdentifier passedIdentifier = berIdentifier;

		if (berIdentifier == null) {
			berIdentifier = new BerIdentifier();
			codeLength += berIdentifier.decode(is);
		}

		BerLength length = new BerLength();
		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 0)) {
			header = new ProfileHeader();
			codeLength += header.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 1)) {
			genericFileManagement = new PEGenericFileManagement();
			codeLength += genericFileManagement.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
			pinCodes = new PEPINCodes();
			codeLength += pinCodes.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
			pukCodes = new PEPUKCodes();
			codeLength += pukCodes.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
			akaParameter = new PEAKAParameter();
			codeLength += akaParameter.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
			cdmaParameter = new PECDMAParameter();
			codeLength += cdmaParameter.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
			securityDomain = new PESecurityDomain();
			codeLength += securityDomain.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
			rfm = new PERFM();
			codeLength += rfm.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
			application = new PEApplication();
			codeLength += application.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
			nonStandard = new PENonStandard();
			codeLength += nonStandard.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 10)) {
			end = new PEEnd();
			codeLength += end.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 11)) {
			rfu1 = new PEDummy();
			codeLength += rfu1.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
			rfu2 = new PEDummy();
			codeLength += rfu2.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
			rfu3 = new PEDummy();
			codeLength += rfu3.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 14)) {
			rfu4 = new PEDummy();
			codeLength += rfu4.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 15)) {
			rfu5 = new PEDummy();
			codeLength += rfu5.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 16)) {
			mf = new PEMF();
			codeLength += mf.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 17)) {
			cd = new PECD();
			codeLength += cd.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 18)) {
			telecom = new PETELECOM();
			codeLength += telecom.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 19)) {
			usim = new PEUSIM();
			codeLength += usim.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 20)) {
			optUsim = new PEOPTUSIM();
			codeLength += optUsim.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 21)) {
			isim = new PEISIM();
			codeLength += isim.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 22)) {
			optIsim = new PEOPTISIM();
			codeLength += optIsim.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 23)) {
			phonebook = new PEPHONEBOOK();
			codeLength += phonebook.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 24)) {
			gsmAccess = new PEGSMACCESS();
			codeLength += gsmAccess.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 25)) {
			csim = new PECSIM();
			codeLength += csim.decode(is, false);
			return codeLength;
		}

		if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 26)) {
			optCsim = new PEOPTCSIM();
			codeLength += optCsim.decode(is, false);
			return codeLength;
		}

		if (passedIdentifier != null) {
			return 0;
		}
		throw new IOException("Error decoding BerChoice: Identifier matched to no item.");
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	public String toString() {
		if ( header!= null) {
			return "CHOICE{header: " + header + "}";
		}

		if ( genericFileManagement!= null) {
			return "CHOICE{genericFileManagement: " + genericFileManagement + "}";
		}

		if ( pinCodes!= null) {
			return "CHOICE{pinCodes: " + pinCodes + "}";
		}

		if ( pukCodes!= null) {
			return "CHOICE{pukCodes: " + pukCodes + "}";
		}

		if ( akaParameter!= null) {
			return "CHOICE{akaParameter: " + akaParameter + "}";
		}

		if ( cdmaParameter!= null) {
			return "CHOICE{cdmaParameter: " + cdmaParameter + "}";
		}

		if ( securityDomain!= null) {
			return "CHOICE{securityDomain: " + securityDomain + "}";
		}

		if ( rfm!= null) {
			return "CHOICE{rfm: " + rfm + "}";
		}

		if ( application!= null) {
			return "CHOICE{application: " + application + "}";
		}

		if ( nonStandard!= null) {
			return "CHOICE{nonStandard: " + nonStandard + "}";
		}

		if ( end!= null) {
			return "CHOICE{end: " + end + "}";
		}

		if ( rfu1!= null) {
			return "CHOICE{rfu1: " + rfu1 + "}";
		}

		if ( rfu2!= null) {
			return "CHOICE{rfu2: " + rfu2 + "}";
		}

		if ( rfu3!= null) {
			return "CHOICE{rfu3: " + rfu3 + "}";
		}

		if ( rfu4!= null) {
			return "CHOICE{rfu4: " + rfu4 + "}";
		}

		if ( rfu5!= null) {
			return "CHOICE{rfu5: " + rfu5 + "}";
		}

		if ( mf!= null) {
			return "CHOICE{mf: " + mf + "}";
		}

		if ( cd!= null) {
			return "CHOICE{cd: " + cd + "}";
		}

		if ( telecom!= null) {
			return "CHOICE{telecom: " + telecom + "}";
		}

		if ( usim!= null) {
			return "CHOICE{usim: " + usim + "}";
		}

		if ( optUsim!= null) {
			return "CHOICE{optUsim: " + optUsim + "}";
		}

		if ( isim!= null) {
			return "CHOICE{isim: " + isim + "}";
		}

		if ( optIsim!= null) {
			return "CHOICE{optIsim: " + optIsim + "}";
		}

		if ( phonebook!= null) {
			return "CHOICE{phonebook: " + phonebook + "}";
		}

		if ( gsmAccess!= null) {
			return "CHOICE{gsmAccess: " + gsmAccess + "}";
		}

		if ( csim!= null) {
			return "CHOICE{csim: " + csim + "}";
		}

		if ( optCsim!= null) {
			return "CHOICE{optCsim: " + optCsim + "}";
		}

		return "unknown";
	}

}

